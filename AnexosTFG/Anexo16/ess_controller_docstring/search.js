window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "ess_controller", "modulename": "ess_controller", "kind": "module", "doc": "<p>Custom component to manage a photovoltaic installation.</p>\n"}, {"fullname": "ess_controller.PLATFORMS", "modulename": "ess_controller", "qualname": "PLATFORMS", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[homeassistant.const.Platform]", "default_value": "[&lt;Platform.SENSOR: &#x27;sensor&#x27;&gt;, &lt;Platform.NUMBER: &#x27;number&#x27;&gt;]"}, {"fullname": "ess_controller.async_setup_entry", "modulename": "ess_controller", "qualname": "async_setup_entry", "kind": "function", "doc": "<p>Set up the pv_controller component from config entry.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">hass</span><span class=\"p\">:</span> <span class=\"n\">homeassistant</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">HomeAssistant</span>,</span><span class=\"param\">\t<span class=\"n\">config_entry</span><span class=\"p\">:</span> <span class=\"n\">homeassistant</span><span class=\"o\">.</span><span class=\"n\">config_entries</span><span class=\"o\">.</span><span class=\"n\">ConfigEntry</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.update_listener", "modulename": "ess_controller", "qualname": "update_listener", "kind": "function", "doc": "<p>Update listener.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">hass</span><span class=\"p\">:</span> <span class=\"n\">homeassistant</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">HomeAssistant</span>,</span><span class=\"param\">\t<span class=\"n\">config_entry</span><span class=\"p\">:</span> <span class=\"n\">homeassistant</span><span class=\"o\">.</span><span class=\"n\">config_entries</span><span class=\"o\">.</span><span class=\"n\">ConfigEntry</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.async_unload_entry", "modulename": "ess_controller", "qualname": "async_unload_entry", "kind": "function", "doc": "<p>Unload a config entry.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">hass</span><span class=\"p\">:</span> <span class=\"n\">homeassistant</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">HomeAssistant</span>,</span><span class=\"param\">\t<span class=\"n\">config_entry</span><span class=\"p\">:</span> <span class=\"n\">homeassistant</span><span class=\"o\">.</span><span class=\"n\">config_entries</span><span class=\"o\">.</span><span class=\"n\">ConfigEntry</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api", "modulename": "ess_controller.api", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI", "modulename": "ess_controller.api", "qualname": "PVContollerAPI", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.__init__", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.__init__", "kind": "function", "doc": "<p>Initialize the API.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">prophet_influxdb_addon_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">influx_db_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">influx_db_user</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">influx_db_pass</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">influx_db_database</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">acin_to_acout_sensor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">inverter_to_acout_sensor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">solar_production_sensor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hystory_forecast_solar_sensor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">battery_capacity_Wh</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_charge_energy_per_period_Wh</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_discharge_energy_per_period_Wh</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_buy_energy_per_period_Wh</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">charge_efficiency</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">discharge_efficiency</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">battery_purchase_price</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">str_local_timezone</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">enable_fore_to_real_correction</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">sell_allowed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "ess_controller.api.PVContollerAPI.class_local_timezone", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.class_local_timezone", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.battery_purchase_price", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.battery_purchase_price", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.sell_allowed", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.sell_allowed", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.dict_effective_forecast_solar", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.dict_effective_forecast_solar", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.influx_last_update", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.influx_last_update", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.df_history_solar_production", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.df_history_solar_production", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.history_solar_production_last_day_Wh", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.history_solar_production_last_day_Wh", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.df_hystory_forecast_solar", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.df_hystory_forecast_solar", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.hystory_forecast_solar_last_day_Wh", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.hystory_forecast_solar_last_day_Wh", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.fore_to_real_df", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.fore_to_real_df", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.fore_to_real_dict", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.fore_to_real_dict", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.enable_fore_to_real_correction", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.enable_fore_to_real_correction", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.last_history_solar_production_update", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.last_history_solar_production_update", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.dict_demand_prophet_predictions", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.dict_demand_prophet_predictions", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.demand_prophet_current_hour_prediction", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.demand_prophet_current_hour_prediction", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.demand_prophet_next_hour_prediction", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.demand_prophet_next_hour_prediction", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.dict_target_socs", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.dict_target_socs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.target_soc_current_hour", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.target_soc_current_hour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.pulp_json_results", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.pulp_json_results", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.pulp_parameters", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.pulp_parameters", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.api.PVContollerAPI.async_close", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.async_close", "kind": "function", "doc": "<p>Close the aiohttp session.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.set_class_local_timezone", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.set_class_local_timezone", "kind": "function", "doc": "<p>Set the local timezone for the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">str_timezone</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.set_dict_pvpc_buy_prices", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.set_dict_pvpc_buy_prices", "kind": "function", "doc": "<p>Set dict_pvpc_buy_prices.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dict_pvpc_buy_prices</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.set_dict_pvpc_sell_prices", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.set_dict_pvpc_sell_prices", "kind": "function", "doc": "<p>Set dict_pvpc_sell_prices.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dict_pvpc_sell_prices</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.set_dict_forecast_solar", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.set_dict_forecast_solar", "kind": "function", "doc": "<p>Set dict_forecast_solar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dict_forecast_solar</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.set_current_initial_soc", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.set_current_initial_soc", "kind": "function", "doc": "<p>Set current_initial_soc_Wh.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">soc_percent</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.set_current_min_soc", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.set_current_min_soc", "kind": "function", "doc": "<p>Set current_min_soc_Wh.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">soc_percent</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.format_date_for_influxdb", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.format_date_for_influxdb", "kind": "function", "doc": "<p>Return a date and time with timezone information in the format '2024-10-01T00:00:00Z' (UTC timezone).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">date</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.energy_query_string", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.energy_query_string", "kind": "function", "doc": "<p>Create the SQL query string for energy data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">entity_id</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.df_from_influxdb", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.df_from_influxdb", "kind": "function", "doc": "<p>Function to read data from InfluxDB using the InfluxDB API with aiohttp.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.hourly_delta_energy_dataframe", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.hourly_delta_energy_dataframe", "kind": "function", "doc": "<p>Create a DataFrame with hourly energy deltas.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">entity_id</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.hourly_energy_dataframe", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.hourly_energy_dataframe", "kind": "function", "doc": "<p>Create a DataFrame with hourly energy data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">entity_id</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.energy_total_in_df_by_date", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.energy_total_in_df_by_date", "kind": "function", "doc": "<p>Return the total energy consumed in a DataFrame for a selected date.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">df</span>, </span><span class=\"param\"><span class=\"n\">selected_date</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.get_history_solar_production_df", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.get_history_solar_production_df", "kind": "function", "doc": "<p>Get the historical solar production DataFrame.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.get_history_forecast_solar_df", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.get_history_forecast_solar_df", "kind": "function", "doc": "<p>Get the historical solar forecast DataFrame.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.update_influxdb", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.update_influxdb", "kind": "function", "doc": "<p>Update InfluxDB data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">force_update</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.post_energy_query", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.post_energy_query", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">base_url</span>, </span><span class=\"param\"><span class=\"n\">energy_query_data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.make_predictions", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.make_predictions", "kind": "function", "doc": "<p>Make energy consumption predictions using Prophet.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">current_datetime</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">force_update</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.need_new_target_socs", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.need_new_target_socs", "kind": "function", "doc": "<p>Check if new target SoCs need to be calculated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.api.PVContollerAPI.check_data_ready", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.check_data_ready", "kind": "function", "doc": "<p>Check if all necessary data is available.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.api.PVContollerAPI.prepare_lists_for_soc_calc", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.prepare_lists_for_soc_calc", "kind": "function", "doc": "<p>Prepare lists for SoC calculation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">current_datetime</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.pvpc_dict_to_list", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.pvpc_dict_to_list", "kind": "function", "doc": "<p>Convert an electricity price dictionary into a list of floats.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dict_pvpc</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">current_datetime</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.forecast_solar_dict_to_list", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.forecast_solar_dict_to_list", "kind": "function", "doc": "<p>Convert a solar forecast dictionary into a list of floats.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dict_forecast_solar</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">current_datetime</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.make_target_socs", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.make_target_socs", "kind": "function", "doc": "<p>Calculate the target SoCs for as many periods as we have available information.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">current_datetime</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">force_update</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.pulp_calculations", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.pulp_calculations", "kind": "function", "doc": "<p>Solve the optimization problem with PuLP.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">current_datetime</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.make_hourly_df_between_dates", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.make_hourly_df_between_dates", "kind": "function", "doc": "<p>Create a DataFrame with hourly values between two dates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">start</span>, </span><span class=\"param\"><span class=\"n\">end</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.compare_solar_production_forecast", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.compare_solar_production_forecast", "kind": "function", "doc": "<p>Compare historical solar production with solar forecast.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.api.PVContollerAPI.make_effective_forecast_solar", "modulename": "ess_controller.api", "qualname": "PVContollerAPI.make_effective_forecast_solar", "kind": "function", "doc": "<p>Calculate the corrected solar forecast with the ratio between solar production and solar forecast.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.config_flow", "modulename": "ess_controller.config_flow", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ess_controller.config_flow.PVcontrollerConfigFlow", "modulename": "ess_controller.config_flow", "qualname": "PVcontrollerConfigFlow", "kind": "class", "doc": "<p>Handle a config flow for pv_controller.</p>\n", "bases": "homeassistant.data_entry_flow.FlowHandler[homeassistant.config_entries.ConfigFlowContext, homeassistant.config_entries.ConfigFlowResult, str]"}, {"fullname": "ess_controller.config_flow.PVcontrollerConfigFlow.VERSION", "modulename": "ess_controller.config_flow", "qualname": "PVcontrollerConfigFlow.VERSION", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "ess_controller.config_flow.PVcontrollerConfigFlow.async_step_user", "modulename": "ess_controller.config_flow", "qualname": "PVcontrollerConfigFlow.async_step_user", "kind": "function", "doc": "<p>Handle the first step of the user configuration flow.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_input</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.config_flow.PVcontrollerConfigFlow.async_step_two", "modulename": "ess_controller.config_flow", "qualname": "PVcontrollerConfigFlow.async_step_two", "kind": "function", "doc": "<p>Handle the second step of the user configuration flow.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_input</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.config_flow.PVcontrollerConfigFlow.async_step_three", "modulename": "ess_controller.config_flow", "qualname": "PVcontrollerConfigFlow.async_step_three", "kind": "function", "doc": "<p>Handle the third step of the user configuration flow.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_input</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.config_flow.PVcontrollerConfigFlow.async_step_four", "modulename": "ess_controller.config_flow", "qualname": "PVcontrollerConfigFlow.async_step_four", "kind": "function", "doc": "<p>Handle the fourth step of the user configuration flow.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_input</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.config_flow.PVcontrollerConfigFlow.async_step_import", "modulename": "ess_controller.config_flow", "qualname": "PVcontrollerConfigFlow.async_step_import", "kind": "function", "doc": "<p>Handle import from YAML.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_input</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.config_flow.PVcontrollerConfigFlow.async_get_options_flow", "modulename": "ess_controller.config_flow", "qualname": "PVcontrollerConfigFlow.async_get_options_flow", "kind": "function", "doc": "<p>Return the options flow.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_entry</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.const", "modulename": "ess_controller.const", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ess_controller.const.DOMAIN", "modulename": "ess_controller.const", "qualname": "DOMAIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;ess_controller&#x27;"}, {"fullname": "ess_controller.const.TITLE", "modulename": "ess_controller.const", "qualname": "TITLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;ESS Controller&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_BATTERY_CAPACITY_WH", "modulename": "ess_controller.const", "qualname": "DEFAULT_BATTERY_CAPACITY_WH", "kind": "variable", "doc": "<p></p>\n", "default_value": "2560"}, {"fullname": "ess_controller.const.DEFAULT_MAX_CHARGE_ENERGY_PER_PERIOD_WH", "modulename": "ess_controller.const", "qualname": "DEFAULT_MAX_CHARGE_ENERGY_PER_PERIOD_WH", "kind": "variable", "doc": "<p></p>\n", "default_value": "1200"}, {"fullname": "ess_controller.const.DEFAULT_MAX_DISCHARGE_ENERGY_PER_PERIOD_WH", "modulename": "ess_controller.const", "qualname": "DEFAULT_MAX_DISCHARGE_ENERGY_PER_PERIOD_WH", "kind": "variable", "doc": "<p></p>\n", "default_value": "1200"}, {"fullname": "ess_controller.const.DEFAULT_MAX_BUY_ENERGY_PER_PERIOD_WH", "modulename": "ess_controller.const", "qualname": "DEFAULT_MAX_BUY_ENERGY_PER_PERIOD_WH", "kind": "variable", "doc": "<p></p>\n", "default_value": "1700"}, {"fullname": "ess_controller.const.DEFAULT_CHARGE_EFFICIENCY", "modulename": "ess_controller.const", "qualname": "DEFAULT_CHARGE_EFFICIENCY", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.9"}, {"fullname": "ess_controller.const.DEFAULT_DISCHARGE_EFFICIENCY", "modulename": "ess_controller.const", "qualname": "DEFAULT_DISCHARGE_EFFICIENCY", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.85"}, {"fullname": "ess_controller.const.DEFAULT_MIN_SOC_PERCENT", "modulename": "ess_controller.const", "qualname": "DEFAULT_MIN_SOC_PERCENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "30"}, {"fullname": "ess_controller.const.DEFAULT_PVPC_BUY_ENTITY", "modulename": "ess_controller.const", "qualname": "DEFAULT_PVPC_BUY_ENTITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;sensor.esios_pvpc&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_PVPC_SELL_ENTITY", "modulename": "ess_controller.const", "qualname": "DEFAULT_PVPC_SELL_ENTITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;sensor.esios_injection_price&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_INFLUX_DB_URL", "modulename": "ess_controller.const", "qualname": "DEFAULT_INFLUX_DB_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;http://192.168.0.100:8086&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_INFLUX_DB_USER", "modulename": "ess_controller.const", "qualname": "DEFAULT_INFLUX_DB_USER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;homeassistant&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_INFLUX_DB_PASS", "modulename": "ess_controller.const", "qualname": "DEFAULT_INFLUX_DB_PASS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;your_password&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_INFLUX_DB_DATABASE", "modulename": "ess_controller.const", "qualname": "DEFAULT_INFLUX_DB_DATABASE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;homeassistant&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_ACIN_TO_ACOUT_SENSOR", "modulename": "ess_controller.const", "qualname": "DEFAULT_ACIN_TO_ACOUT_SENSOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;sensor.victron_vebus_acin1toacout_228&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_INVERTER_TO_ACOUT_SENSOR", "modulename": "ess_controller.const", "qualname": "DEFAULT_INVERTER_TO_ACOUT_SENSOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;sensor.victron_vebus_invertertoacout_228&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_BATTERY_SOC_SENSOR", "modulename": "ess_controller.const", "qualname": "DEFAULT_BATTERY_SOC_SENSOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;sensor.victron_system_battery_soc&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_BATTERY_MIN_SOC_OVERRIDES_SENSOR", "modulename": "ess_controller.const", "qualname": "DEFAULT_BATTERY_MIN_SOC_OVERRIDES_SENSOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;sensor.victron_settings_ess_batterylife_soclimit&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_SOLAR_PRODUCTION_SENSOR", "modulename": "ess_controller.const", "qualname": "DEFAULT_SOLAR_PRODUCTION_SENSOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;sensor.victron_solarcharger_yield_user_230&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_FORECAST_SOLAR_ENTITY", "modulename": "ess_controller.const", "qualname": "DEFAULT_FORECAST_SOLAR_ENTITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;sensor.energy_current_hour&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_FORECAST_SOLAR_API_BASE_URL", "modulename": "ess_controller.const", "qualname": "DEFAULT_FORECAST_SOLAR_API_BASE_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://api.forecast.solar/estimate/&#x27;"}, {"fullname": "ess_controller.const.DEFAULT_FORECAST_SOLAR_LATITUDE", "modulename": "ess_controller.const", "qualname": "DEFAULT_FORECAST_SOLAR_LATITUDE", "kind": "variable", "doc": "<p></p>\n", "default_value": "41.619"}, {"fullname": "ess_controller.const.DEFAULT_FORECAST_SOLAR_LONGITUDE", "modulename": "ess_controller.const", "qualname": "DEFAULT_FORECAST_SOLAR_LONGITUDE", "kind": "variable", "doc": "<p></p>\n", "default_value": "-0.924"}, {"fullname": "ess_controller.const.DEFAULT_FORECAST_SOLAR_PEAK_POWER", "modulename": "ess_controller.const", "qualname": "DEFAULT_FORECAST_SOLAR_PEAK_POWER", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.65"}, {"fullname": "ess_controller.const.DEFAULT_FORECAST_SOLAR_DECLINATION", "modulename": "ess_controller.const", "qualname": "DEFAULT_FORECAST_SOLAR_DECLINATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "ess_controller.const.DEFAULT_FORECAST_SOLAR_AZIMUTH", "modulename": "ess_controller.const", "qualname": "DEFAULT_FORECAST_SOLAR_AZIMUTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "218"}, {"fullname": "ess_controller.const.COORDINATOR_UPDATE_INTERVAL", "modulename": "ess_controller.const", "qualname": "COORDINATOR_UPDATE_INTERVAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "datetime.timedelta(seconds=30)"}, {"fullname": "ess_controller.const.FORECAST_UPDATE_INTERVAL", "modulename": "ess_controller.const", "qualname": "FORECAST_UPDATE_INTERVAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "datetime.timedelta(seconds=3600)"}, {"fullname": "ess_controller.const.RETRY_AFTER_429", "modulename": "ess_controller.const", "qualname": "RETRY_AFTER_429", "kind": "variable", "doc": "<p></p>\n", "default_value": "datetime.timedelta(seconds=3600)"}, {"fullname": "ess_controller.const.INFLUX_UPDATE_INTERVAL", "modulename": "ess_controller.const", "qualname": "INFLUX_UPDATE_INTERVAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "datetime.timedelta(seconds=900)"}, {"fullname": "ess_controller.const.TARGET_SOC_UPDATE_INTERVAL", "modulename": "ess_controller.const", "qualname": "TARGET_SOC_UPDATE_INTERVAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "datetime.timedelta(seconds=1200)"}, {"fullname": "ess_controller.const.SOC_PERCENT_DEVIATION_FORCE_RECALC", "modulename": "ess_controller.const", "qualname": "SOC_PERCENT_DEVIATION_FORCE_RECALC", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "ess_controller.const.HISTORY_SOLAR_MAX_DAYS", "modulename": "ess_controller.const", "qualname": "HISTORY_SOLAR_MAX_DAYS", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "ess_controller.const.DEFAULT_PROPHET_INFLUXDB_ADDON_URL", "modulename": "ess_controller.const", "qualname": "DEFAULT_PROPHET_INFLUXDB_ADDON_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;http://localhost:5000&#x27;"}, {"fullname": "ess_controller.const.STORE_FORECAST_SOLAR_GLOBAL_KEY", "modulename": "ess_controller.const", "qualname": "STORE_FORECAST_SOLAR_GLOBAL_KEY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;ess_controller_forecast_solar&#x27;"}, {"fullname": "ess_controller.const.STORE_USER_INPUT_GLOBAL_KEY", "modulename": "ess_controller.const", "qualname": "STORE_USER_INPUT_GLOBAL_KEY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;ess_controller_user_inputs&#x27;"}, {"fullname": "ess_controller.const.get_existing_or_default", "modulename": "ess_controller.const", "qualname": "get_existing_or_default", "kind": "function", "doc": "<p>Get the existing configuration value or the default value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_entry</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">default</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.const.create_step_one_schema", "modulename": "ess_controller.const", "qualname": "create_step_one_schema", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_entry</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.const.create_step_two_schema", "modulename": "ess_controller.const", "qualname": "create_step_two_schema", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_entry</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.const.create_step_three_schema", "modulename": "ess_controller.const", "qualname": "create_step_three_schema", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_entry</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.const.create_step_four_schema", "modulename": "ess_controller.const", "qualname": "create_step_four_schema", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_entry</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.coordinator", "modulename": "ess_controller.coordinator", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator", "kind": "class", "doc": "<p>Gather data for the energy device.</p>\n", "bases": "homeassistant.helpers.update_coordinator.BaseDataUpdateCoordinatorProtocol, typing.Generic[~_DataT]"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.pvpc_buy_entity", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.pvpc_buy_entity", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.pvpc_sell_entity", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.pvpc_sell_entity", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.forecast_solar_entity", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.forecast_solar_entity", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.user_min_soc", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.user_min_soc", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.enable_fore_to_real_correction", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.enable_fore_to_real_correction", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.sell_allowed", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.sell_allowed", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.battery_soc_sensor", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.battery_soc_sensor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.security_min_soc_sensor", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.security_min_soc_sensor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.data", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.buy_prices_rawdata", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.buy_prices_rawdata", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.sell_prices_rawdata", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.sell_prices_rawdata", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.buy_prices_useful_dict", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.buy_prices_useful_dict", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.sell_prices_useful_dict", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.sell_prices_useful_dict", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.current_buy_price", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.current_buy_price", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.current_sell_price", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.current_sell_price", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.forecast_solar_energy_next_hour", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.forecast_solar_energy_next_hour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.forecast_solar_rawdata", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.forecast_solar_rawdata", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.forecast_solar_useful_dict", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.forecast_solar_useful_dict", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.effective_forecast_solar_useful_dict", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.effective_forecast_solar_useful_dict", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.fore_to_real_dict", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.fore_to_real_dict", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.predicted_demand", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.predicted_demand", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.predicted_demand_current_hour", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.predicted_demand_current_hour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.predicted_demand_next_hour", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.predicted_demand_next_hour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.target_socs", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.target_socs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.target_soc_current_hour", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.target_soc_current_hour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.pulp_json_results", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.pulp_json_results", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.pulp_parameters", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.pulp_parameters", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.current_soc", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.current_soc", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.current_security_min_soc", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.current_security_min_soc", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.current_min_soc", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.current_min_soc", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.used_last_target_soc", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.used_last_target_soc", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.forecast_solar_last_update", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.forecast_solar_last_update", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.predicted_demand_last_update", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.predicted_demand_last_update", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.target_socs_last_update", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.target_socs_last_update", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.str_local_timezone", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.str_local_timezone", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.class_local_timezone", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.class_local_timezone", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.store", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.store", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.store_user_inputs", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.store_user_inputs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.force_updates_step", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.force_updates_step", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.soc_safety_margin", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.soc_safety_margin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.max_setpoint_W", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.max_setpoint_W", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.proposed_setpoint_W", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.proposed_setpoint_W", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.api", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.api", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.async_close", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.async_close", "kind": "function", "doc": "<p>Close the aiohttp session and the API.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.set_class_local_timezone", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.set_class_local_timezone", "kind": "function", "doc": "<p>Set the local timezone for the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">str_timezone</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.async_initialize", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.async_initialize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.update_current_min_soc", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.update_current_min_soc", "kind": "function", "doc": "<p>Update the current minimum SoC value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.unique_id", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.unique_id", "kind": "variable", "doc": "<p>Return a unique ID to use for this entity.</p>\n"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.get_entity_attributes", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.get_entity_attributes", "kind": "function", "doc": "<p>Return the attributes of a sensor with the given entity_id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">entity_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.get_pvpc_buy_attributes", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.get_pvpc_buy_attributes", "kind": "function", "doc": "<p>Access all attributes of the ESIOS PVPC sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.get_current_soc", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.get_current_soc", "kind": "function", "doc": "<p>Return the current SoC value from self.battery_soc_sensor=entry.data[\"battery_soc_sensor\"].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.get_esios_sensor_dict", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.get_esios_sensor_dict", "kind": "function", "doc": "<p>Return today's and tomorrow's prices from the PVPC sensor with keys\nprice_00h to price_23h and price_next_day_00h to price_next_day_23h.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">esios_sensor_name</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.pvpc_desired_keys", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.pvpc_desired_keys", "kind": "function", "doc": "<p>Create a list of desired keys for PVPC prices.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.get_url_forecast_solar", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.get_url_forecast_solar", "kind": "function", "doc": "<p>Return the URL of the Forecast.Solar API.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.fetch_forecast_solar_data", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.fetch_forecast_solar_data", "kind": "function", "doc": "<p>Fetch solar forecast data from Forecast.Solar API.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.async_load_data", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.async_load_data", "kind": "function", "doc": "<p>Load persistent data from storage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.async_save_data", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.async_save_data", "kind": "function", "doc": "<p>Save persistent data to storage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">last_request_time</span>, </span><span class=\"param\"><span class=\"n\">forecast_data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.make_forecast_solar_useful_dict", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.make_forecast_solar_useful_dict", "kind": "function", "doc": "<p>Convert Forecast.Solar data to a continuous dictionary starting at the current hour.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">current_datetime</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.coordinator.PVControllerUpdateCoordinator.update_proposed_setpoint", "modulename": "ess_controller.coordinator", "qualname": "PVControllerUpdateCoordinator.update_proposed_setpoint", "kind": "function", "doc": "<p>Update the setpoint Sensor.\nTenemos una programaci\u00f3n para los target SoC que se ha calculado con los\nsiguientes datos de partida\nself.api.demand_prophet_current_hour_prediction\nself.api._last_calc_initial_soc_Wh\nEn principio el objetivo ser\u00e1 que el\nEn la API, mediante la funci\u00f3n need_new_target_socs, se determina si es necesario\nactualizar los target SoC por existir una desviaci\u00f3n superior a SOC_PERCENT_DEVIATION_FORCE_RECALC\nentre el valor actual del soc y el valor con el que se calcul\u00f3 el target SoC.\nPor tanto las comparaciones para determinar el setpoint_W se deben realizar con el \nvalor que exist\u00eda en el momento de realizar el c\u00e1lculo, y no con el valor actual del soc.\nDe esta forma, si hay una desviaci\u00f3n se recalcular\u00e1 inmediatamente y podremos establecer el\nsetpoint_W con conocimiento de causa.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.number", "modulename": "ess_controller.number", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ess_controller.number.async_setup_entry", "modulename": "ess_controller.number", "qualname": "async_setup_entry", "kind": "function", "doc": "<p>Set up the number platform.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hass</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span>, </span><span class=\"param\"><span class=\"n\">async_add_entities</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.number.SocNumber", "modulename": "ess_controller.number", "qualname": "SocNumber", "kind": "class", "doc": "<p>Representation of a Number entity.</p>\n", "bases": "homeassistant.components.number.NumberEntity"}, {"fullname": "ess_controller.number.SocNumber.__init__", "modulename": "ess_controller.number", "qualname": "SocNumber.__init__", "kind": "function", "doc": "<p>Initialize a SocNumber NumberEntity.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span>, </span><span class=\"param\"><span class=\"n\">hass</span>, </span><span class=\"param\"><span class=\"n\">min_value</span>, </span><span class=\"param\"><span class=\"n\">max_value</span>, </span><span class=\"param\"><span class=\"n\">step</span></span>)</span>"}, {"fullname": "ess_controller.number.SocNumber.async_update", "modulename": "ess_controller.number", "qualname": "SocNumber.async_update", "kind": "function", "doc": "<p>Fetch new state data for the number entity from the coordinator.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.number.SocNumber.async_set_native_value", "modulename": "ess_controller.number", "qualname": "SocNumber.async_set_native_value", "kind": "function", "doc": "<p>Set the number value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.options_flow", "modulename": "ess_controller.options_flow", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ess_controller.options_flow.PVcontrollerOptionsFlowHandler", "modulename": "ess_controller.options_flow", "qualname": "PVcontrollerOptionsFlowHandler", "kind": "class", "doc": "<p>Handle pv_controller options flow.</p>\n", "bases": "homeassistant.data_entry_flow.FlowHandler[homeassistant.config_entries.ConfigFlowContext, homeassistant.config_entries.ConfigFlowResult, str]"}, {"fullname": "ess_controller.options_flow.PVcontrollerOptionsFlowHandler.__init__", "modulename": "ess_controller.options_flow", "qualname": "PVcontrollerOptionsFlowHandler.__init__", "kind": "function", "doc": "<p>Initialize the options flow handler.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.options_flow.PVcontrollerOptionsFlowHandler.config_entry", "modulename": "ess_controller.options_flow", "qualname": "PVcontrollerOptionsFlowHandler.config_entry", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.options_flow.PVcontrollerOptionsFlowHandler.async_step_init", "modulename": "ess_controller.options_flow", "qualname": "PVcontrollerOptionsFlowHandler.async_step_init", "kind": "function", "doc": "<p>Handle the first step of the options flow.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_input</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.options_flow.PVcontrollerOptionsFlowHandler.async_step_two", "modulename": "ess_controller.options_flow", "qualname": "PVcontrollerOptionsFlowHandler.async_step_two", "kind": "function", "doc": "<p>Handle the second step of the options flow.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_input</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.options_flow.PVcontrollerOptionsFlowHandler.async_step_three", "modulename": "ess_controller.options_flow", "qualname": "PVcontrollerOptionsFlowHandler.async_step_three", "kind": "function", "doc": "<p>Handle the third step of the options flow.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_input</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.options_flow.PVcontrollerOptionsFlowHandler.async_step_four", "modulename": "ess_controller.options_flow", "qualname": "PVcontrollerOptionsFlowHandler.async_step_four", "kind": "function", "doc": "<p>Handle the fourth step of the options flow.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_input</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.options_flow.PVcontrollerOptionsFlowHandler.async_get_options_flow", "modulename": "ess_controller.options_flow", "qualname": "PVcontrollerOptionsFlowHandler.async_get_options_flow", "kind": "function", "doc": "<p>Return the options flow handler.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_entry</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.sensor", "modulename": "ess_controller.sensor", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ess_controller.sensor.async_setup_entry", "modulename": "ess_controller.sensor", "qualname": "async_setup_entry", "kind": "function", "doc": "<p>Set up the sensor platform.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hass</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span>, </span><span class=\"param\"><span class=\"n\">async_add_entities</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.PVPC_Buy_Sensor", "modulename": "ess_controller.sensor", "qualname": "PVPC_Buy_Sensor", "kind": "class", "doc": "<p>Representation of a PVPC Buy Sensor.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.PVPC_Buy_Sensor.__init__", "modulename": "ess_controller.sensor", "qualname": "PVPC_Buy_Sensor.__init__", "kind": "function", "doc": "<p>Initialize the PVPC Buy Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.PVPC_Buy_Sensor.name", "modulename": "ess_controller.sensor", "qualname": "PVPC_Buy_Sensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.PVPC_Buy_Sensor.available", "modulename": "ess_controller.sensor", "qualname": "PVPC_Buy_Sensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.PVPC_Buy_Sensor.device_info", "modulename": "ess_controller.sensor", "qualname": "PVPC_Buy_Sensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.PVPC_Buy_Sensor.native_value", "modulename": "ess_controller.sensor", "qualname": "PVPC_Buy_Sensor.native_value", "kind": "variable", "doc": "<p>Return the state of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.PVPC_Buy_Sensor.extra_state_attributes", "modulename": "ess_controller.sensor", "qualname": "PVPC_Buy_Sensor.extra_state_attributes", "kind": "variable", "doc": "<p>Return the state attributes of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.PVPC_Buy_Sensor.async_update", "modulename": "ess_controller.sensor", "qualname": "PVPC_Buy_Sensor.async_update", "kind": "function", "doc": "<p>Update the sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.PVPC_Buy_Sensor.async_added_to_hass", "modulename": "ess_controller.sensor", "qualname": "PVPC_Buy_Sensor.async_added_to_hass", "kind": "function", "doc": "<p>When entity is added to hass.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.PVPC_Sell_Sensor", "modulename": "ess_controller.sensor", "qualname": "PVPC_Sell_Sensor", "kind": "class", "doc": "<p>Representation of a PVPC Sell Sensor.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.PVPC_Sell_Sensor.__init__", "modulename": "ess_controller.sensor", "qualname": "PVPC_Sell_Sensor.__init__", "kind": "function", "doc": "<p>Initialize the PVPC Sell Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.PVPC_Sell_Sensor.name", "modulename": "ess_controller.sensor", "qualname": "PVPC_Sell_Sensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.PVPC_Sell_Sensor.available", "modulename": "ess_controller.sensor", "qualname": "PVPC_Sell_Sensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.PVPC_Sell_Sensor.device_info", "modulename": "ess_controller.sensor", "qualname": "PVPC_Sell_Sensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.PVPC_Sell_Sensor.native_value", "modulename": "ess_controller.sensor", "qualname": "PVPC_Sell_Sensor.native_value", "kind": "variable", "doc": "<p>Return the state of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.PVPC_Sell_Sensor.extra_state_attributes", "modulename": "ess_controller.sensor", "qualname": "PVPC_Sell_Sensor.extra_state_attributes", "kind": "variable", "doc": "<p>Return the state attributes of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.PVPC_Sell_Sensor.async_update", "modulename": "ess_controller.sensor", "qualname": "PVPC_Sell_Sensor.async_update", "kind": "function", "doc": "<p>Update the sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.PVPC_Sell_Sensor.async_added_to_hass", "modulename": "ess_controller.sensor", "qualname": "PVPC_Sell_Sensor.async_added_to_hass", "kind": "function", "doc": "<p>When entity is added to hass.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.ForecastSolar_Sensor", "modulename": "ess_controller.sensor", "qualname": "ForecastSolar_Sensor", "kind": "class", "doc": "<p>Representation of a Forecast Solar Sensor.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.ForecastSolar_Sensor.__init__", "modulename": "ess_controller.sensor", "qualname": "ForecastSolar_Sensor.__init__", "kind": "function", "doc": "<p>Initialize the Forecast Solar Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.ForecastSolar_Sensor.name", "modulename": "ess_controller.sensor", "qualname": "ForecastSolar_Sensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastSolar_Sensor.available", "modulename": "ess_controller.sensor", "qualname": "ForecastSolar_Sensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastSolar_Sensor.device_info", "modulename": "ess_controller.sensor", "qualname": "ForecastSolar_Sensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastSolar_Sensor.native_value", "modulename": "ess_controller.sensor", "qualname": "ForecastSolar_Sensor.native_value", "kind": "variable", "doc": "<p>Return the state of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastSolar_Sensor.native_unit_of_measurement", "modulename": "ess_controller.sensor", "qualname": "ForecastSolar_Sensor.native_unit_of_measurement", "kind": "variable", "doc": "<p>Return the unit of measurement of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastSolar_Sensor.extra_state_attributes", "modulename": "ess_controller.sensor", "qualname": "ForecastSolar_Sensor.extra_state_attributes", "kind": "variable", "doc": "<p>Return the state attributes of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastSolar_Sensor.async_update", "modulename": "ess_controller.sensor", "qualname": "ForecastSolar_Sensor.async_update", "kind": "function", "doc": "<p>Update the sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.ForecastSolar_Sensor.async_added_to_hass", "modulename": "ess_controller.sensor", "qualname": "ForecastSolar_Sensor.async_added_to_hass", "kind": "function", "doc": "<p>When entity is added to hass.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.ForecastDemand_Sensor", "modulename": "ess_controller.sensor", "qualname": "ForecastDemand_Sensor", "kind": "class", "doc": "<p>Representation of a Forecast Demand Sensor.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.ForecastDemand_Sensor.__init__", "modulename": "ess_controller.sensor", "qualname": "ForecastDemand_Sensor.__init__", "kind": "function", "doc": "<p>Initialize the Forecast Demand Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.ForecastDemand_Sensor.name", "modulename": "ess_controller.sensor", "qualname": "ForecastDemand_Sensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastDemand_Sensor.available", "modulename": "ess_controller.sensor", "qualname": "ForecastDemand_Sensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastDemand_Sensor.device_info", "modulename": "ess_controller.sensor", "qualname": "ForecastDemand_Sensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastDemand_Sensor.native_value", "modulename": "ess_controller.sensor", "qualname": "ForecastDemand_Sensor.native_value", "kind": "variable", "doc": "<p>Return the state of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastDemand_Sensor.native_unit_of_measurement", "modulename": "ess_controller.sensor", "qualname": "ForecastDemand_Sensor.native_unit_of_measurement", "kind": "variable", "doc": "<p>Return the unit of measurement of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastDemand_Sensor.extra_state_attributes", "modulename": "ess_controller.sensor", "qualname": "ForecastDemand_Sensor.extra_state_attributes", "kind": "variable", "doc": "<p>Return the state attributes of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.ForecastDemand_Sensor.async_update", "modulename": "ess_controller.sensor", "qualname": "ForecastDemand_Sensor.async_update", "kind": "function", "doc": "<p>Update the sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.ForecastDemand_Sensor.async_added_to_hass", "modulename": "ess_controller.sensor", "qualname": "ForecastDemand_Sensor.async_added_to_hass", "kind": "function", "doc": "<p>When entity is added to hass.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.TargetSoC_Sensor", "modulename": "ess_controller.sensor", "qualname": "TargetSoC_Sensor", "kind": "class", "doc": "<p>Representation of a Target SoC Sensor.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.TargetSoC_Sensor.__init__", "modulename": "ess_controller.sensor", "qualname": "TargetSoC_Sensor.__init__", "kind": "function", "doc": "<p>Initialize the Target SoC Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.TargetSoC_Sensor.name", "modulename": "ess_controller.sensor", "qualname": "TargetSoC_Sensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.TargetSoC_Sensor.available", "modulename": "ess_controller.sensor", "qualname": "TargetSoC_Sensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.TargetSoC_Sensor.device_info", "modulename": "ess_controller.sensor", "qualname": "TargetSoC_Sensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.TargetSoC_Sensor.native_value", "modulename": "ess_controller.sensor", "qualname": "TargetSoC_Sensor.native_value", "kind": "variable", "doc": "<p>Return the state of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.TargetSoC_Sensor.native_unit_of_measurement", "modulename": "ess_controller.sensor", "qualname": "TargetSoC_Sensor.native_unit_of_measurement", "kind": "variable", "doc": "<p>Return the unit of measurement of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.TargetSoC_Sensor.extra_state_attributes", "modulename": "ess_controller.sensor", "qualname": "TargetSoC_Sensor.extra_state_attributes", "kind": "variable", "doc": "<p>Return the state attributes of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.TargetSoC_Sensor.async_update", "modulename": "ess_controller.sensor", "qualname": "TargetSoC_Sensor.async_update", "kind": "function", "doc": "<p>Update the sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.TargetSoC_Sensor.async_added_to_hass", "modulename": "ess_controller.sensor", "qualname": "TargetSoC_Sensor.async_added_to_hass", "kind": "function", "doc": "<p>When entity is added to hass.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.CurrentSoC_Sensor", "modulename": "ess_controller.sensor", "qualname": "CurrentSoC_Sensor", "kind": "class", "doc": "<p>Representation of a Current SoC Sensor.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.CurrentSoC_Sensor.__init__", "modulename": "ess_controller.sensor", "qualname": "CurrentSoC_Sensor.__init__", "kind": "function", "doc": "<p>Initialize the Current SoC Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.CurrentSoC_Sensor.name", "modulename": "ess_controller.sensor", "qualname": "CurrentSoC_Sensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.CurrentSoC_Sensor.available", "modulename": "ess_controller.sensor", "qualname": "CurrentSoC_Sensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.CurrentSoC_Sensor.device_info", "modulename": "ess_controller.sensor", "qualname": "CurrentSoC_Sensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.CurrentSoC_Sensor.native_value", "modulename": "ess_controller.sensor", "qualname": "CurrentSoC_Sensor.native_value", "kind": "variable", "doc": "<p>Return the state of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.CurrentSoC_Sensor.native_unit_of_measurement", "modulename": "ess_controller.sensor", "qualname": "CurrentSoC_Sensor.native_unit_of_measurement", "kind": "variable", "doc": "<p>Return the unit of measurement of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.CurrentSoC_Sensor.async_update", "modulename": "ess_controller.sensor", "qualname": "CurrentSoC_Sensor.async_update", "kind": "function", "doc": "<p>Update the sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.CurrentSoC_Sensor.async_added_to_hass", "modulename": "ess_controller.sensor", "qualname": "CurrentSoC_Sensor.async_added_to_hass", "kind": "function", "doc": "<p>When entity is added to hass.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.MinSoC_Sensor", "modulename": "ess_controller.sensor", "qualname": "MinSoC_Sensor", "kind": "class", "doc": "<p>Representation of a Minimum SoC Sensor.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.MinSoC_Sensor.__init__", "modulename": "ess_controller.sensor", "qualname": "MinSoC_Sensor.__init__", "kind": "function", "doc": "<p>Initialize the Minimum SoC Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.MinSoC_Sensor.name", "modulename": "ess_controller.sensor", "qualname": "MinSoC_Sensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.MinSoC_Sensor.available", "modulename": "ess_controller.sensor", "qualname": "MinSoC_Sensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.MinSoC_Sensor.device_info", "modulename": "ess_controller.sensor", "qualname": "MinSoC_Sensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.MinSoC_Sensor.native_value", "modulename": "ess_controller.sensor", "qualname": "MinSoC_Sensor.native_value", "kind": "variable", "doc": "<p>Return the state of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.MinSoC_Sensor.native_unit_of_measurement", "modulename": "ess_controller.sensor", "qualname": "MinSoC_Sensor.native_unit_of_measurement", "kind": "variable", "doc": "<p>Return the unit of measurement of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.MinSoC_Sensor.extra_state_attributes", "modulename": "ess_controller.sensor", "qualname": "MinSoC_Sensor.extra_state_attributes", "kind": "variable", "doc": "<p>Return the state attributes of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.MinSoC_Sensor.async_update", "modulename": "ess_controller.sensor", "qualname": "MinSoC_Sensor.async_update", "kind": "function", "doc": "<p>Update the sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.MinSoC_Sensor.async_added_to_hass", "modulename": "ess_controller.sensor", "qualname": "MinSoC_Sensor.async_added_to_hass", "kind": "function", "doc": "<p>When entity is added to hass.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.UpdateTime_Sensor", "modulename": "ess_controller.sensor", "qualname": "UpdateTime_Sensor", "kind": "class", "doc": "<p>Representation of an Update Time Sensor.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.UpdateTime_Sensor.__init__", "modulename": "ess_controller.sensor", "qualname": "UpdateTime_Sensor.__init__", "kind": "function", "doc": "<p>Initialize the Update Time Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">coordinator_param</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.UpdateTime_Sensor.coordinator_param", "modulename": "ess_controller.sensor", "qualname": "UpdateTime_Sensor.coordinator_param", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ess_controller.sensor.UpdateTime_Sensor.name", "modulename": "ess_controller.sensor", "qualname": "UpdateTime_Sensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.UpdateTime_Sensor.available", "modulename": "ess_controller.sensor", "qualname": "UpdateTime_Sensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.UpdateTime_Sensor.device_info", "modulename": "ess_controller.sensor", "qualname": "UpdateTime_Sensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.UpdateTime_Sensor.native_value", "modulename": "ess_controller.sensor", "qualname": "UpdateTime_Sensor.native_value", "kind": "variable", "doc": "<p>Return the state of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.UpdateTime_Sensor.async_update", "modulename": "ess_controller.sensor", "qualname": "UpdateTime_Sensor.async_update", "kind": "function", "doc": "<p>Update the sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.UpdateTime_Sensor.async_added_to_hass", "modulename": "ess_controller.sensor", "qualname": "UpdateTime_Sensor.async_added_to_hass", "kind": "function", "doc": "<p>When entity is added to hass.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.EffectiveForecastSolar_Sensor", "modulename": "ess_controller.sensor", "qualname": "EffectiveForecastSolar_Sensor", "kind": "class", "doc": "<p>Representation of an Effective Forecast Solar Sensor.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.EffectiveForecastSolar_Sensor.__init__", "modulename": "ess_controller.sensor", "qualname": "EffectiveForecastSolar_Sensor.__init__", "kind": "function", "doc": "<p>Initialize the Effective Forecast Solar Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.EffectiveForecastSolar_Sensor.name", "modulename": "ess_controller.sensor", "qualname": "EffectiveForecastSolar_Sensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.EffectiveForecastSolar_Sensor.available", "modulename": "ess_controller.sensor", "qualname": "EffectiveForecastSolar_Sensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.EffectiveForecastSolar_Sensor.device_info", "modulename": "ess_controller.sensor", "qualname": "EffectiveForecastSolar_Sensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.EffectiveForecastSolar_Sensor.native_value", "modulename": "ess_controller.sensor", "qualname": "EffectiveForecastSolar_Sensor.native_value", "kind": "variable", "doc": "<p>Return the state of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.EffectiveForecastSolar_Sensor.native_unit_of_measurement", "modulename": "ess_controller.sensor", "qualname": "EffectiveForecastSolar_Sensor.native_unit_of_measurement", "kind": "variable", "doc": "<p>Return the unit of measurement of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.EffectiveForecastSolar_Sensor.extra_state_attributes", "modulename": "ess_controller.sensor", "qualname": "EffectiveForecastSolar_Sensor.extra_state_attributes", "kind": "variable", "doc": "<p>Return the state attributes of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.EffectiveForecastSolar_Sensor.async_update", "modulename": "ess_controller.sensor", "qualname": "EffectiveForecastSolar_Sensor.async_update", "kind": "function", "doc": "<p>Update the sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.EffectiveForecastSolar_Sensor.async_added_to_hass", "modulename": "ess_controller.sensor", "qualname": "EffectiveForecastSolar_Sensor.async_added_to_hass", "kind": "function", "doc": "<p>When entity is added to hass.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.SolarForeToReal_Sensor", "modulename": "ess_controller.sensor", "qualname": "SolarForeToReal_Sensor", "kind": "class", "doc": "<p>Representation of a Solar Forecast to Real Sensor.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.SolarForeToReal_Sensor.__init__", "modulename": "ess_controller.sensor", "qualname": "SolarForeToReal_Sensor.__init__", "kind": "function", "doc": "<p>Initialize the Solar Forecast to Real Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.SolarForeToReal_Sensor.name", "modulename": "ess_controller.sensor", "qualname": "SolarForeToReal_Sensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.SolarForeToReal_Sensor.available", "modulename": "ess_controller.sensor", "qualname": "SolarForeToReal_Sensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.SolarForeToReal_Sensor.device_info", "modulename": "ess_controller.sensor", "qualname": "SolarForeToReal_Sensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.SolarForeToReal_Sensor.native_value", "modulename": "ess_controller.sensor", "qualname": "SolarForeToReal_Sensor.native_value", "kind": "variable", "doc": "<p>Return the state of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.SolarForeToReal_Sensor.native_unit_of_measurement", "modulename": "ess_controller.sensor", "qualname": "SolarForeToReal_Sensor.native_unit_of_measurement", "kind": "variable", "doc": "<p>Return the unit of measurement of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.SolarForeToReal_Sensor.extra_state_attributes", "modulename": "ess_controller.sensor", "qualname": "SolarForeToReal_Sensor.extra_state_attributes", "kind": "variable", "doc": "<p>Return the state attributes of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.SolarForeToReal_Sensor.async_update", "modulename": "ess_controller.sensor", "qualname": "SolarForeToReal_Sensor.async_update", "kind": "function", "doc": "<p>Update the sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.SolarForeToReal_Sensor.async_added_to_hass", "modulename": "ess_controller.sensor", "qualname": "SolarForeToReal_Sensor.async_added_to_hass", "kind": "function", "doc": "<p>When entity is added to hass.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.PulpResultsTextSensor", "modulename": "ess_controller.sensor", "qualname": "PulpResultsTextSensor", "kind": "class", "doc": "<p>Base class for sensor entities.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.PulpResultsTextSensor.__init__", "modulename": "ess_controller.sensor", "qualname": "PulpResultsTextSensor.__init__", "kind": "function", "doc": "<p>Initialize the PulpResultsTextSensor Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.PulpResultsTextSensor.name", "modulename": "ess_controller.sensor", "qualname": "PulpResultsTextSensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.PulpResultsTextSensor.available", "modulename": "ess_controller.sensor", "qualname": "PulpResultsTextSensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.PulpResultsTextSensor.device_info", "modulename": "ess_controller.sensor", "qualname": "PulpResultsTextSensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.PulpResultsTextSensor.state", "modulename": "ess_controller.sensor", "qualname": "PulpResultsTextSensor.state", "kind": "variable", "doc": "<p>Return the state of the sensor and perform unit conversions, if needed.</p>\n"}, {"fullname": "ess_controller.sensor.PulpResultsTextSensor.extra_state_attributes", "modulename": "ess_controller.sensor", "qualname": "PulpResultsTextSensor.extra_state_attributes", "kind": "variable", "doc": "<p>Return the state attributes of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.PulpResultsTextSensor.update", "modulename": "ess_controller.sensor", "qualname": "PulpResultsTextSensor.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.sensor.SetPoint_Sensor", "modulename": "ess_controller.sensor", "qualname": "SetPoint_Sensor", "kind": "class", "doc": "<p>SetPoint Sensor:\nThis sensor is used to expose to external automations the value \nthat the user has configured for the maximum power that can be \npurchased from the electrical grid in Watts.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.SetPoint_Sensor.__init__", "modulename": "ess_controller.sensor", "qualname": "SetPoint_Sensor.__init__", "kind": "function", "doc": "<p>Initialize the SetPoint Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.SetPoint_Sensor.name", "modulename": "ess_controller.sensor", "qualname": "SetPoint_Sensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.SetPoint_Sensor.available", "modulename": "ess_controller.sensor", "qualname": "SetPoint_Sensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.SetPoint_Sensor.device_info", "modulename": "ess_controller.sensor", "qualname": "SetPoint_Sensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.SetPoint_Sensor.native_value", "modulename": "ess_controller.sensor", "qualname": "SetPoint_Sensor.native_value", "kind": "variable", "doc": "<p>Return the state of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.SetPoint_Sensor.native_unit_of_measurement", "modulename": "ess_controller.sensor", "qualname": "SetPoint_Sensor.native_unit_of_measurement", "kind": "variable", "doc": "<p>Return the unit of measurement of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.SetPoint_Sensor.async_update", "modulename": "ess_controller.sensor", "qualname": "SetPoint_Sensor.async_update", "kind": "function", "doc": "<p>Update the sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.SetPoint_Sensor.async_added_to_hass", "modulename": "ess_controller.sensor", "qualname": "SetPoint_Sensor.async_added_to_hass", "kind": "function", "doc": "<p>When entity is added to hass.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.sensor.PulpParametersTextSensor", "modulename": "ess_controller.sensor", "qualname": "PulpParametersTextSensor", "kind": "class", "doc": "<p>Base class for sensor entities.</p>\n", "bases": "homeassistant.components.sensor.SensorEntity"}, {"fullname": "ess_controller.sensor.PulpParametersTextSensor.__init__", "modulename": "ess_controller.sensor", "qualname": "PulpParametersTextSensor.__init__", "kind": "function", "doc": "<p>Initialize the PulpParametersTextSensor Sensor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinator</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">config_entry</span></span>)</span>"}, {"fullname": "ess_controller.sensor.PulpParametersTextSensor.name", "modulename": "ess_controller.sensor", "qualname": "PulpParametersTextSensor.name", "kind": "variable", "doc": "<p>Return the name of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.PulpParametersTextSensor.available", "modulename": "ess_controller.sensor", "qualname": "PulpParametersTextSensor.available", "kind": "variable", "doc": "<p>Return if entity is available.</p>\n"}, {"fullname": "ess_controller.sensor.PulpParametersTextSensor.device_info", "modulename": "ess_controller.sensor", "qualname": "PulpParametersTextSensor.device_info", "kind": "variable", "doc": "<p>Return device information to link the entity to a device.</p>\n"}, {"fullname": "ess_controller.sensor.PulpParametersTextSensor.state", "modulename": "ess_controller.sensor", "qualname": "PulpParametersTextSensor.state", "kind": "variable", "doc": "<p>Return the state of the sensor and perform unit conversions, if needed.</p>\n"}, {"fullname": "ess_controller.sensor.PulpParametersTextSensor.extra_state_attributes", "modulename": "ess_controller.sensor", "qualname": "PulpParametersTextSensor.extra_state_attributes", "kind": "variable", "doc": "<p>Return the state attributes of the sensor.</p>\n"}, {"fullname": "ess_controller.sensor.PulpParametersTextSensor.update", "modulename": "ess_controller.sensor", "qualname": "PulpParametersTextSensor.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.utils", "modulename": "ess_controller.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ess_controller.utils.get_device_info", "modulename": "ess_controller.utils", "qualname": "get_device_info", "kind": "function", "doc": "<p>Return device information to link the entity to a device.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_entry</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.utils.get_entity_description", "modulename": "ess_controller.utils", "qualname": "get_entity_description", "kind": "function", "doc": "<p>Get the entity description from Home Assistant.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hass</span><span class=\"p\">:</span> <span class=\"n\">homeassistant</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">HomeAssistant</span>, </span><span class=\"param\"><span class=\"n\">entity_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.utils.get_coordinator_from_entity_name", "modulename": "ess_controller.utils", "qualname": "get_coordinator_from_entity_name", "kind": "function", "doc": "<p>Get the coordinator from the entity name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hass</span><span class=\"p\">:</span> <span class=\"n\">homeassistant</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">HomeAssistant</span>, </span><span class=\"param\"><span class=\"n\">entity_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.utils.forecast_solar_api_to_dict", "modulename": "ess_controller.utils", "qualname": "forecast_solar_api_to_dict", "kind": "function", "doc": "<p>Convert a solar forecast dictionary as downloaded from the Forecast.Solar API\ninto a continuous dictionary with data starting from current_datetime.\nThe download is a dictionary of the type {'2024-10-28 07:31:26': 0.0, '2024-10-28 08:31:26': 0.0, ...}</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">forecast_solar_api_data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">current_datetime</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.utils.pvpc_raw_to_useful_dict", "modulename": "ess_controller.utils", "qualname": "pvpc_raw_to_useful_dict", "kind": "function", "doc": "<p>Convert a dictionary of electricity prices as obtained from the attributes of\nthe ESIOS integration sensor into a continuous dictionary with data starting from current_datetime.\nThe sensor has a dictionary of the type {'price_00h': 0.1178, 'price_01h': 0.11417, ...}\nSometimes it also has keys for the next day, such as 'price_00h_next_day': 0.1178</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dict_pvpc</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">current_datetime</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.utils.dict_to_markdown_table", "modulename": "ess_controller.utils", "qualname": "dict_to_markdown_table", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ess_controller.utils.async_get_value_from_store", "modulename": "ess_controller.utils", "qualname": "async_get_value_from_store", "kind": "function", "doc": "<p>Load persistent data from storage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">store</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "ess_controller.utils.async_save_value_to_store", "modulename": "ess_controller.utils", "qualname": "async_save_value_to_store", "kind": "function", "doc": "<p>Save persistent data to storage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">store</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();